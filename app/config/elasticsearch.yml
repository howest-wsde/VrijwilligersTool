fos_elastica:
    clients:
        default: { host: "%elasticsearch_host%", port: "%elasticsearch_port%" }
    indexes:
        %elasticsearch_index%:
            finder: ~
            settings:
                index:
                    analysis:
                        analyzer:
                            nl_analyzer:
                                type: snowball
                                language: Dutch
                            # other analyzers
            types:
                person:
                    mappings:
                        id: { type: integer }
                        firstName: { type: string, index: not_analyzed }
                        lastName: { type: string, index: not_analyzed }
                        username: { type: string, index: not_analyzed }
                        email: { type: string, index: not_analyzed }
                        street: { type: string, index: not_analyzed }
                        number: { type: integer }
                        bus: { type: string, index: not_analyzed }
                        postalcode: { type: integer }
                        city: { type: string, index: not_analyzed }
                        location: { type: geo_point, property_path: esGetLocation }
                        telephone: { type: string, index: not_analyzed }
                        language: { type: string, index: not_analyzed }
                        linkedinUrl: { type: string, index: not_analyzed }
                        access: { type: boolean }
                        renumerate: { type: boolean }
                        contactOrganisation:
                            type: object
                            properties:
                                id: { type: integer }
                                entity: { type: string, property_path: esGetEntityName, index: no }
                                name: { type: string, index: not_analyzed }
                                type: { type: string, index: not_analyzed }
                                intermediary: { type: boolean }
                                deleted: { type: boolean }
                                description: { type: string, analyzer: nl_analyzer }
                                email: { type: string, index: not_analyzed }
                                street: { type: string, index: not_analyzed }
                                number: { type: integer }
                                postalcode: { type: integer }
                                bus: { type: string, index: not_analyzed }
                                city: { type: string, index: not_analyzed }
                                urlId: { type: string, index: not_analyzed }
                                slogan: { type: string, analyzer: nl_analyzer }
                                telephone: { type: string, index: not_analyzed }
                                website: { type: string, index: not_analyzed }
                                creator:
                                    type: object
                                    properties:
                                        id: { type: integer }
                                        entity: { type: string, property_path: esGetEntityName, index: no }
                                        firstName: { type: string, index: not_analyzed }
                                        lastName: { type: string, index: not_analyzed }
                                        username: { type: string, index: not_analyzed }
                                        email: { type: string, index: not_analyzed }
                                        telephone: { type: string, index: not_analyzed }
                                        linkedinUrl: { type: string, index: not_analyzed }
                        organisations:
                            type: object
                            properties:
                                id: { type: integer }
                                entity: { type: string, property_path: esGetEntityName, index: no }

                                name: { type: string, index: not_analyzed }
                                type: { type: string, index: not_analyzed }
                                intermediary: { type: boolean }
                                deleted: { type: boolean }
                                description: { type: string, analyzer: nl_analyzer }
                                email: { type: string, index: not_analyzed }
                                street: { type: string, index: not_analyzed }
                                number: { type: integer }
                                postalcode: { type: integer }
                                bus: { type: string, index: not_analyzed }
                                city: { type: string, index: not_analyzed }
                                urlId: { type: string, index: not_analyzed }
                                slogan: { type: string, analyzer: nl_analyzer }
                                telephone: { type: string, index: not_analyzed }
                                website: { type: string, index: not_analyzed }
                                creator:
                                    type: object
                                    properties:
                                        id: { type: integer }
                                        entity: { type: string, property_path: esGetEntityName, index: no }
                                        firstName: { type: string, index: not_analyzed }
                                        lastName: { type: string, index: not_analyzed }
                                        username: { type: string, index: not_analyzed }
                                        email: { type: string, index: not_analyzed }
                                        telephone: { type: string, index: not_analyzed }
                                        linkedinUrl: { type: string, index: not_analyzed }

                        # testimonials: "%nl%" TODO: change to object mapping
                        skills:
                            type: object
                            properties:
                                id: { type: integer }
                                name: { type: string, index: not_analyzed }
                                entity: { type: string, property_path: esGetEntityName, index: no }
                                parent:
                                    type: object
                                    properties:
                                        id: { type: integer }
                                        name: { type: string, index: not_analyzed }
                                        entity: { type: string, property_path: esGetEntityName, index: no }
                    persistence:
                        driver: orm
                        model: AppBundle\Entity\Person
                        provider: ~
                        listener: %listener%
                        finder: ~
                        elastica_to_model_transformer:
                            ignore_missing: true
                organisation:
                    mappings:
                        id: { type: integer }
                        name: { type: string, index: not_analyzed }
                        type: { type: string, index: not_analyzed }
                        intermediary: { type: boolean }
                        deleted: { type: boolean }
                        description: { type: string, analyzer: nl_analyzer }
                        email: { type: string, index: not_analyzed }
                        street: { type: string, index: not_analyzed }
                        number: { type: integer }
                        postalcode: { type: integer }
                        bus: { type: string, index: not_analyzed }
                        city: { type: string, index: not_analyzed }
                        location: { type: geo_point, property_path: esGetLocation }
                        urlId: { type: string, index: not_analyzed }
                        slogan: { type: string, analyzer: nl_analyzer }
                        telephone: { type: string, index: not_analyzed }
                        website: { type: string, index: not_analyzed }
                        sectors:
                            type: object
                            properties:
                                id: { type: integer }
                                name: { type: string, index: not_analyzed }
                                entity: { type: string, property_path: esGetSectorName, index: no }
                                parent:
                                    type: object
                                    properties:
                                        id: { type: integer }
                                        name: { type: string, index: not_analyzed }
                                        entity: { type: string, property_path: esGetEntityName, index: no }
                        creator:
                            type: object
                            properties:
                                id: { type: integer }
                                entity: { type: string, property_path: esGetEntityName, index: no }
                                firstName: { type: string, index: not_analyzed }
                                lastName: { type: string, index: not_analyzed }
                                username: { type: string, index: not_analyzed }
                                email: { type: string, index: not_analyzed }
                                street: { type: string, index: not_analyzed }
                                number: { type: integer }
                                bus: { type: string, index: not_analyzed }
                                postalcode: { type: integer }
                                city: { type: string, index: not_analyzed }
                                telephone: { type: string, index: not_analyzed }
                                language: { type: string, index: not_analyzed }
                                linkedinUrl: { type: string, index: not_analyzed }
                    persistence:
                        driver: orm
                        model: AppBundle\Entity\Organisation
                        provider: ~
                        listener: %listener%
                        finder: ~
                        elastica_to_model_transformer:
                            ignore_missing: true
                skill:
                    mappings:
                        id: { type: integer }
                        name: { type: string, index: not_analyzed }
                        parent:
                            type: object
                            properties:
                                id: { type: integer }
                                name: { type: string, index: not_analyzed }
                                entity: { type: string, property_path: esGetEntityName, index: no }
                    persistence:
                        driver: orm
                        model: AppBundle\Entity\Skill
                        provider: ~
                        listener: %listener%
                        finder: ~
                        elastica_to_model_transformer:
                            ignore_missing: true

                # # testimonial:
                # #     mappings:
                # #         value: %nl%
                # #         sender: %nl%
                # #         receiver: %nl%
                # #     persistence:
                # #         driver: orm
                # #         model: AppBundle\Entity\Testimonial
                # #         provider: ~
                # #         listener: %listener%
                # #         finder: ~
                # #         elastica_to_model_transformer:
                # #             ignore_missing: true

                vacancy:
                    mappings:
                        id: { type: integer }
                        title: { type: string, analyzer: nl_analyzer }
                        description: { type: string, analyzer: nl_analyzer }
                        startdate: { type: date }
                        enddate: { type: date }
                        urlId: { type: string, index: not_analyzed }
                        organisation:
                            type: object
                            properties:
                                id: { type: integer }
                                entity: { type: string, property_path: esGetEntityName, index: no }
                                name: { type: string, index: not_analyzed }
                                type: { type: string, index: not_analyzed }
                                intermediary: { type: boolean }
                                deleted: { type: boolean }
                                description: { type: string, analyzer: nl_analyzer }
                                email: { type: string, index: not_analyzed }
                                street: { type: string, index: not_analyzed }
                                number: { type: integer }
                                postalcode: { type: integer }
                                bus: { type: string, index: not_analyzed }
                                city: { type: string, index: not_analyzed }
                                urlId: { type: string, index: not_analyzed }
                                slogan: { type: string, analyzer: nl_analyzer }
                                telephone: { type: string, index: not_analyzed }
                                website: { type: string, index: not_analyzed }
                                creator:
                                    type: object
                                    properties:
                                        id: { type: integer }
                                        entity: { type: string, property_path: esGetEntityName, index: no }
                                        firstName: { type: string, index: not_analyzed }
                                        lastName: { type: string, index: not_analyzed }
                                        username: { type: string, index: not_analyzed }
                                        email: { type: string, index: not_analyzed }
                                        telephone: { type: string, index: not_analyzed }
                                        linkedinUrl: { type: string, index: not_analyzed }
                        summary: { type: string, analyzer: nl_analyzer }
                        longterm: { type: boolean }
                        street: { type: string, index: not_analyzed }
                        number: { type: integer }
                        postalcode: { type: integer }
                        bus: { type: string, index: not_analyzed }
                        city: { type: string, index: not_analyzed }
                        location: { type: geo_point, property_path: esGetLocation }
                        access: { type: boolean }
                        estimatedWorkInHours: { type: integer }
                        socialInteraction: { type: string, index: not_analyzed }
                        independent: { type: string, index: not_analyzed }
                        renumeration: { type: float }
                        otherReward: { type: string, analyzer: nl_analyzer }
                        published: { type: integer }
                        wanted: { type: integer }
                        stillWanted: { type: integer }
                        skills:
                            type: object
                            properties:
                                id: { type: integer }
                                name: { type: string, index: not_analyzed }
                                entity: { type: string, property_path: esGetEntityName, index: no }
                                parent:
                                    type: object
                                    properties:
                                        id: { type: integer }
                                        name: { type: string, index: not_analyzed }
                                        entity: { type: string, property_path: esGetEntityName, index: no }
                    persistence:
                        driver: orm
                        model: AppBundle\Entity\Vacancy
                        provider: ~
                        listener: %listener%
                        finder: ~
                        elastica_to_model_transformer:
                            ignore_missing: true
